/** type {ComponentContext} */
let menuDrawer;
window.drawer_opts = {
  autoHideWidth: 1280,
  on: {
    'drawer:open': function() {
      /* ... */
    },
    'drawer:close': function() {
      /* ... */
    }
  },
  ready: function() {
    menuDrawer = this;
    menuDrawer.$.playAnimation(['animate__fadeIn', enterAnimation]);
    // TODO: work-around to very initial rendering occasionally not showing cards
    setTimeout(zuix.componentize, 300);
  }
};

function scrollbarVisible(element) {
  const r = element.getBoundingClientRect();
  return r.bottom !== r.height;
}

{% if options contains 'ext-links' -%}
{% include '../common/external-links.js' %}
{% endif %}

// add presentation anim to the drawer
const referrerLink = document.createElement('a');
referrerLink.href = document.referrer;
const enterAnimation =
  (referrerLink.pathname === '{{ app.baseUrl }}') ?
    'animate__fadeInLeft' : 'animate__fadeIn';

// smooth scroll for local anchors
function navigateTo(anchor) {
  const target = zuix.$.find('a[name="' + anchor + '"]');
  zuix.context(document.body).scroll
          .scrollTo(target, 500);
}


{% if zuixEditor -%}
// zuix-editor events handling
zuix.context('zuix-editor', function(ed) {
  const data = ed.data;
  if (data.tags && data.tags.indexOf('sections') !== -1) {
    data.section = data.group;
  }
  setEditorData(ed.data);
  ed.on({
    'zuix:action:progress': function(e, ar) {
      if (ar.action === 'delete-page' && ar.data.tags.indexOf('sections') === -1) {
        document.location.href = ar.redirect + '#waitReload';
      }
    },
    'zuix:action:result': function(e, ar) {
      if (ar) {
        switch(ar.action) {
          case 'add-page':
            document.location.href = ar.url;
            break;
          case 'delete-page':
            if (ar.data.tags.indexOf('sections') !== -1) { // whole section
              document.location.href = data.app.baseUrl;
            } else { // single page
              refresh();
            }
            break;
          case 'add-component':
            refresh();
            break;
        }
      } else {
        ed.browserSync.socket.connect();
      }
    }
  });
});
function refresh(scrollTop) {
  document.location.reload();
}
{% endif -%}
